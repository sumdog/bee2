include /etc/nginx/modules/*.conf;
pcre_jit on;
daemon off;
error_log /dev/stdout info;

events {
  worker_connections 1024;
}
env PLEROMA_CONTAINER;

http {
  proxy_cache_path /tmp/pleroma-media-cache levels=1:2 keys_zone=pleroma_media_cache:10m max_size=10g
                   inactive=720m use_temp_path=off;
  resolver 127.0.0.11;
  server {
      listen         8080;
      listen         [::]:8080;
      set_by_lua $pleroma_container 'return os.getenv("PLEROMA_CONTAINER")';

      gzip_vary on;
      gzip_proxied any;
      gzip_comp_level 6;
      gzip_buffers 16 8k;
      gzip_http_version 1.1;
      gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript application/activity+json application/atom+xml;

      # the nginx default is 1m, not enough for large media uploads
      client_max_body_size 16m;

      location / {
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_set_header Host $http_host;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

          # this is explicitly IPv4 since Pleroma.Web.Endpoint binds on IPv4 only
          # and `localhost.` resolves to [::0] on some systems: see issue #930
          proxy_pass http://$pleroma_container:4000;

          client_max_body_size 16m;
      }

      location ~ ^/(media|proxy) {
          proxy_cache        pleroma_media_cache;
          slice              1m;
          proxy_cache_key    $host$uri$is_args$args$slice_range;
          proxy_set_header   Range $slice_range;
          proxy_http_version 1.1;
          proxy_cache_valid  200 206 301 304 1h;
          proxy_cache_lock   on;
          proxy_ignore_client_abort on;
          proxy_buffering    on;
          chunked_transfer_encoding on;
          proxy_pass http://$pleroma_container:4000;
      }
  }
}
